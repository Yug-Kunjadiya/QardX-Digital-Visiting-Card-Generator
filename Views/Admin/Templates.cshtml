@model IEnumerable<Template>
@{
    ViewData["Title"] = "Template Management";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2><i class="fas fa-palette me-2"></i>Template Management</h2>
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="@Url.Action("Index", "Admin")">Admin</a></li>
                        <li class="breadcrumb-item active">Templates</li>
                    </ol>
                </nav>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            <div class="card shadow">
                <div class="card-header">
                    <div class="d-flex justify-content-between align-items-center">
                        <h6 class="m-0 fw-bold text-primary">Available Templates</h6>
                        <div class="text-muted">
                            <i class="fas fa-palette me-1"></i>Total: @Model.Count() templates
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    @if (Model != null && Model.Any())
                    {
                        <div class="row">
                            @foreach (var template in Model)
                            {
                                <div class="col-xl-4 col-md-6 mb-4">
                                    <div class="card h-100 border shadow-sm">
                                        <div class="card-header bg-light">
                                            <div class="d-flex justify-content-between align-items-center">
                                                <h6 class="m-0 fw-bold">@template.TemplateName</h6>
                                                <span class="badge bg-primary">ID: @template.TemplateId</span>
                                            </div>
                                        </div>
                                        <div class="card-body">
                                            <div class="mb-3">
                                                <!-- Template Preview -->
                                                <div class="template-preview border rounded p-3 text-center"
                                                     style="background: @GetTemplateColor(template.TemplateName); min-height: 120px;">
                                                    <div class="text-white">
                                                        <h6 class="mb-1">@template.TemplateName</h6>
                                                        <small>Template Preview</small>
                                                        <div class="mt-2">
                                                            <i class="@GetTemplateIcon(template.TemplateName) fa-2x"></i>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            
                                            <div class="template-info">
                                                <p class="text-muted small mb-2">
                                                    <i class="fas fa-folder me-1"></i>
                                                    Path: @(template.FilePath ?? "N/A")
                                                </p>
                                                <p class="text-muted small mb-3">
                                                    <i class="fas fa-info-circle me-1"></i>
                                                    Status: <span class="badge bg-success">Active</span>
                                                </p>
                                            </div>
                                        </div>
                                        <div class="card-footer bg-light">
                                            <div class="d-flex justify-content-between align-items-center">
                                                <small class="text-muted">Template #@template.TemplateId</small>
                                                <div class="btn-group" role="group">
                                                    <button type="button" class="btn btn-sm btn-outline-primary"
                                                            onclick="previewTemplate(@template.TemplateId)">
                                                        <i class="fas fa-eye"></i> Preview
                                                    </button>
                                                    <button type="button" class="btn btn-sm btn-outline-info"
                                                            onclick="editTemplate(@template.TemplateId)">
                                                        <i class="fas fa-edit"></i> Edit
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-center text-muted py-5">
                            <i class="fas fa-palette fa-3x mb-3"></i>
                            <h5>No Templates Found</h5>
                            <p>No templates are available in the system.</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Template Statistics -->
    <div class="row mt-4">
        <div class="col-12">
            <div class="card shadow">
                <div class="card-header">
                    <h6 class="m-0 fw-bold text-primary"><i class="fas fa-chart-bar me-2"></i>Template Usage Statistics</h6>
                </div>
                <div class="card-body">
                    <div class="row">
                        @foreach (var template in Model)
                        {
                            <div class="col-md-4 mb-3">
                                <div class="d-flex justify-content-between align-items-center p-2 border rounded">
                                    <div>
                                        <strong>@template.TemplateName</strong>
                                        <br>
                                        <small class="text-muted">Template ID: @template.TemplateId</small>
                                    </div>
                                    <div class="text-end">
                                        <span class="badge bg-secondary">Active</span>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Template Preview Modal -->
<div class="modal fade" id="templatePreviewModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Template Preview</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="templatePreviewContent">
                <!-- Content will be loaded here -->
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function previewTemplate(templateId) {
            const templates = @Html.Raw(Json.Serialize(Model));
            const template = templates.find(t => t.templateId === templateId);
            
            if (template) {
                const content = `
                    <div class="text-center">
                        <div class="template-preview-large border rounded p-4 mb-3"
                             style="background: ${getTemplateColor(template.templateName)}; color: white;">
                            <h4>${template.templateName}</h4>
                            <p>This is a preview of the ${template.templateName} template</p>
                            <div class="mt-3">
                                <i class="${getTemplateIcon(template.templateName)} fa-3x"></i>
                            </div>
                        </div>
                        <p class="text-muted">Template ID: ${template.templateId}</p>
                        <p class="text-muted">File Path: ${template.filePath || 'N/A'}</p>
                    </div>
                `;
                document.getElementById('templatePreviewContent').innerHTML = content;
                new bootstrap.Modal(document.getElementById('templatePreviewModal')).show();
            }
        }

        function editTemplate(templateId) {
            alert('Template editing functionality would be implemented here for Template ID: ' + templateId);
        }

        function getTemplateColor(templateName) {
            switch(templateName) {
                case 'Classic Blue': return 'linear-gradient(135deg, #3456a3, #5478c4)';
                case 'Minimal White': return 'linear-gradient(135deg, #f8f9fa, #e9ecef)';
                case 'Modern Dark': return 'linear-gradient(135deg, #343a40, #495057)';
                default: return 'linear-gradient(135deg, #6c757d, #adb5bd)';
            }
        }

        function getTemplateIcon(templateName) {
            switch(templateName) {
                case 'Classic Blue': return 'fas fa-building';
                case 'Minimal White': return 'fas fa-feather';
                case 'Modern Dark': return 'fas fa-moon';
                default: return 'fas fa-palette';
            }
        }
    </script>

    <style>
        .template-preview {
            transition: transform 0.2s;
        }
        .template-preview:hover {
            transform: translateY(-2px);
        }
    </style>
}

@functions {
    private string GetTemplateColor(string templateName)
    {
        return templateName switch
        {
            "Classic Blue" => "linear-gradient(135deg, #3456a3, #5478c4)",
            "Minimal White" => "linear-gradient(135deg, #f8f9fa, #e9ecef)",
            "Modern Dark" => "linear-gradient(135deg, #343a40, #495057)",
            _ => "linear-gradient(135deg, #6c757d, #adb5bd)"
        };
    }

    private string GetTemplateIcon(string templateName)
    {
        return templateName switch
        {
            "Classic Blue" => "fas fa-building",
            "Minimal White" => "fas fa-feather",
            "Modern Dark" => "fas fa-moon",
            _ => "fas fa-palette"
        };
    }
}