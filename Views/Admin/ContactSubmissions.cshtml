@model IEnumerable<ContactForm>

@{
    ViewBag.Title = "Contact Form Submissions";
}

<div class="admin-header">
    <h2><i class="fas fa-envelope me-2"></i>Contact Form Submissions</h2>
    <p class="text-muted">Manage contact form submissions from your digital cards</p>
</div>

<div class="card">
    <div class="card-body">
        @if (Model.Any())
        {
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead class="table-dark">
                        <tr>
                            <th>Card</th>
                            <th>Contact Name</th>
                            <th>Email</th>
                            <th>Phone</th>
                            <th>Company</th>
                            <th>Submitted</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var contact in Model.OrderByDescending(c => c.SubmittedAt))
                        {
                            <tr class="@(contact.IsRead ? "" : "table-warning")">
                                <td>
                                    <strong>@contact.Card.FullName</strong><br>
                                    <small class="text-muted">@contact.Card.Company</small>
                                </td>
                                <td>@contact.Name</td>
                                <td>
                                    <a href="mailto:@contact.Email" class="text-decoration-none">
                                        @contact.Email
                                    </a>
                                </td>
                                <td>
                                    @if (!string.IsNullOrEmpty(contact.Phone))
                                    {
                                        <a href="tel:@contact.Phone" class="text-decoration-none">
                                            @contact.Phone
                                        </a>
                                    }
                                    else
                                    {
                                        <span class="text-muted">-</span>
                                    }
                                </td>
                                <td>@(!string.IsNullOrEmpty(contact.Company) ? contact.Company : "-")</td>
                                <td>
                                    <small>@contact.SubmittedAt.ToString("MMM dd, yyyy")</small><br>
                                    <small class="text-muted">@contact.SubmittedAt.ToString("h:mm tt")</small>
                                </td>
                                <td>
                                    @if (contact.IsRead)
                                    {
                                        <span class="badge bg-success">Read</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-warning">New</span>
                                    }
                                </td>
                                <td>
                                    <div class="btn-group btn-group-sm">
                                        <button type="button" class="btn btn-outline-primary" onclick="viewMessage(@contact.ContactFormId)" title="View Message">
                                            <i class="fas fa-eye"></i>
                                        </button>
                                        <a href="mailto:@contact.Email" class="btn btn-outline-success" title="Reply">
                                            <i class="fas fa-reply"></i>
                                        </a>
                                        @if (!contact.IsRead)
                                        {
                                            <button type="button" class="btn btn-outline-secondary" onclick="markAsRead(@contact.ContactFormId)" title="Mark as Read">
                                                <i class="fas fa-check"></i>
                                            </button>
                                        }
                                        <button type="button" class="btn btn-outline-danger" onclick="deleteContact(@contact.ContactFormId)" title="Delete">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="text-center py-5">
                <i class="fas fa-envelope-open fa-3x text-muted mb-3"></i>
                <h4 class="text-muted">No Contact Submissions Yet</h4>
                <p class="text-muted">Contact form submissions will appear here when visitors contact you through your digital cards.</p>
            </div>
        }
    </div>
</div>

<!-- Message Modal -->
<div class="modal fade" id="messageModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Contact Message</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div id="messageContent"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="replyButton">Reply</button>
            </div>
        </div>
    </div>
</div>

<style>
    .admin-header {
        background: linear-gradient(135deg, #3456a3, #5478c4);
        color: white;
        padding: 30px;
        border-radius: 15px;
        margin-bottom: 30px;
    }

    .admin-header h2 {
        margin: 0;
        font-weight: 700;
    }

    .table-warning {
        background-color: rgba(255, 193, 7, 0.1) !important;
    }

    .badge {
        font-size: 0.75em;
    }

    .btn-group-sm > .btn {
        padding: 0.25rem 0.5rem;
        font-size: 0.875rem;
    }
</style>

<script>
function viewMessage(contactId) {
    fetch(`/Admin/GetContactMessage/${contactId}`)
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                const content = `
                    <div class="contact-details">
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <strong>Name:</strong> ${data.contact.name}
                            </div>
                            <div class="col-md-6">
                                <strong>Email:</strong> ${data.contact.email}
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <strong>Phone:</strong> ${data.contact.phone || 'Not provided'}
                            </div>
                            <div class="col-md-6">
                                <strong>Company:</strong> ${data.contact.company || 'Not provided'}
                            </div>
                        </div>
                        <div class="mb-3">
                            <strong>Submitted:</strong> ${new Date(data.contact.submittedAt).toLocaleString()}
                        </div>
                        <div class="message-content">
                            <strong>Message:</strong>
                            <div class="border p-3 mt-2 rounded bg-light">
                                ${data.contact.message.replace(/\n/g, '<br>')}
                            </div>
                        </div>
                    </div>
                `;
                
                document.getElementById('messageContent').innerHTML = content;
                document.getElementById('replyButton').onclick = () => {
                    window.location.href = `mailto:${data.contact.email}`;
                };
                
                new bootstrap.Modal(document.getElementById('messageModal')).show();
                
                // Mark as read if not already
                if (!data.contact.isRead) {
                    markAsRead(contactId, false);
                }
            }
        })
        .catch(error => {
            alert('Error loading message');
        });
}

function markAsRead(contactId, reload = true) {
    fetch(`/Admin/MarkContactAsRead/${contactId}`, { method: 'POST' })
        .then(response => response.json())
        .then(data => {
            if (data.success && reload) {
                location.reload();
            }
        })
        .catch(error => {
            alert('Error marking as read');
        });
}

function deleteContact(contactId) {
    if (confirm('Are you sure you want to delete this contact submission?')) {
        fetch(`/Admin/DeleteContact/${contactId}`, { method: 'DELETE' })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    location.reload();
                } else {
                    alert('Error deleting contact');
                }
            })
            .catch(error => {
                alert('Error deleting contact');
            });
    }
}
</script>